@startuml
'https://plantuml.com/class-diagram


class FruitProductionDifference
{
    - yearBefore : int
    - yearAfter : int
    - fruit : String
    - productionDifference : int
    + biggestAbsoluteDifferenceInCountry(productionList : CompletedInfo, searchedCountry : String) : FruitProductionDifference
}

interface Iterable{
}

interface Iterator{
}
package info{
class CompletedInfo
{
- completedInfo : TreeMap<String,CountryInfo>
+ iterator() : Iterator<FruitEntry>
}

class CountryInfo
 {
     - countryInfo : TreeMap<String, YearInfo>
     + iterator() : Iterator<CountryEntry>
     + getByCountry(country : String) : YearInfo
 }

 class YearInfo
 {
     - yearInfo : TreeMap<Integer, Integer>
     + iterator() : Iterator<YearEntry>
 }
}
package iterator{
class FruitInfoIterator
{
    current : Map.Entry<String, CountryInfo>
    list : TreeMap<String, CountryInfo>
    + hasNext(): boolean
    + next(): T
}
class CountryInfoIterator
{
    current : Map.Entry<String, YearInfo>
    list : TreeMap<String, YearInfo>
    + hasNext(): boolean
    + next(): T
}

class YearInfoIterator
{
    current : Map.Entry<Integer, Integer>
    list : TreeMap<Integer,Integer>
    + hasNext(): boolean
    + next(): T
}

}

package entries{
class FruitEntry
{
    - fruit : String
    - country : CountryInfo
}
class CountryEntry
 {
     - country : String
     - year : YearInfo
 }
 class YearEntry
  {
      - year : int
      - quantity : int
  }
}












FruitProductionDifference  ---> YearInfoIterator: uses
FruitProductionDifference --->  FruitInfoIterator: uses

YearEntry <-- YearInfoIterator : returns
YearInfoIterator -[dashed]---|> Iterator
YearInfoIterator <-- YearInfo : returns
YearInfo -[dashed]-|> Iterable

FruitEntry <-- FruitInfoIterator : returns
FruitInfoIterator -[dashed]---|>Iterator
FruitInfoIterator <-- CompletedInfo : returns
CompletedInfo -[dashed]-|> Iterable

CountryEntry <-- CountryInfoIterator : returns
CountryInfoIterator -[dashed]---|> Iterator
CountryInfoIterator <-- CountryInfo : returns
CountryInfo -[dashed]-|> Iterable



@enduml