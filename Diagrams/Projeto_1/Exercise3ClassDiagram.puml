@startuml
'https://plantuml.com/class-diagram
'skinparam linetype ortho

package esinf{
class MinimumNumberOfCountriesForQ{
{static}+MinimumNumberOfCountriesForQ(CompletedInfo allInfo, BigInteger wantedQuantity): Integer
{static}+ProcessCompletedInfoForExercise3(CompletedInfo allInfo): TreeMap<String, BigInteger>
}
package info{
class CompletedInfo {
+getCompletedInfo() : TreeMap<String, CountryInfo>
+iterator() : Iterator<FruitEntry>
}
}
package entries{
class FruitEntry{
-fruit : String
-country : CountryInfo

+getCountryInfo() : CountryInfo

}

class CountryEntry{
-year : YearInfo

+getCountry() : String
+getYearInfo() : YearInfo
}

class YearEntry{
-quantity : int

+getQuantity() : int
}
}
interface Iterator{
}

package iterators{
class FruitInfoIterator{
    current : Map.Entry<String, CountryInfo>
    list : TreeMap<String, CountryInfo>
    + hasNext(): boolean
    + next(): T
}

class CountryInfoIterator{
    current : Map.Entry<String, YearInfo>
    list : TreeMap<String, YearInfo>
    + hasNext(): boolean
    + next(): T
}
class YearInfoIterator{
    current : Map.Entry<Integer, Integer>
    list : TreeMap<Integer,Integer>
    + hasNext(): boolean
    + next(): T
 }
}

package info{
class CountryInfo
{
    - countryInfo : TreeMap<String, YearInfo>
    + iterator() : Iterator<CountryEntry>
    + getByCountry(country : String) : YearInfo
}

class YearInfo
{
    - yearInfo : TreeMap<Integer, Integer>
    + iterator() : Iterator<YearEntry>
}

}

interface Iterable{
}

YearEntry <-- YearInfoIterator : returns
YearInfoIterator -[dashed]---|> Iterator
YearInfoIterator <-- YearInfo : returns
FruitEntry <-- FruitInfoIterator : returns
FruitInfoIterator -[dashed]---|>Iterator
FruitInfoIterator <-- CompletedInfo : returns
CountryEntry <-- CountryInfoIterator : returns
CountryInfoIterator -[dashed]---|> Iterator
CountryInfoIterator <-- CountryInfo : returns

YearInfo -[dashed]-|> Iterable
CompletedInfo -[dashed]-|> Iterable
CountryInfo -[dashed]-|> Iterable

MinimumNumberOfCountriesForQ-->CompletedInfo : uses
MinimumNumberOfCountriesForQ-->FruitEntry : uses
MinimumNumberOfCountriesForQ-->CountryEntry : uses
MinimumNumberOfCountriesForQ-->YearEntry : uses
}
@enduml